---
import type { Mark, Props as $ } from "../lib/types";
import { throwError } from "../lib/internal";
import { unknownMarkWarning } from "../lib/warnings";

export type Props = $<Mark>;

const { node, index, isInline, ...attrs } = Astro.props;
const markTypeIs = (markType: string) => markType === node.markType;
const err = unknownMarkWarning(node.markType);
---

{
  markTypeIs("code") ? (
    <code {...attrs}><slot /></code>
  ) : markTypeIs("em") ? (
    <em {...attrs}><slot /></em>
  ) : markTypeIs("link") ? (
    <a href={(node as unknown as Mark<{ href: string }>).markDef.href} {...attrs}><slot /></a>
  ) : markTypeIs("strike-through") ? (
    <del {...attrs}><slot /></del>
  ) : markTypeIs("strong") ? (
    <strong {...attrs}><slot /></strong>
  ) : markTypeIs("underline") ? (
    <span style="text-decoration: underline;" {...attrs}><slot /></span>
  ) : (
    throwError(err)
  )
}
